name: wheel
  
on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10"]
        os: [macos-latest, windows-latest]
        architecture: ["x64", "x86"]
        exclude:
          - python-version: '2.7' # pybind11 requires VC2015 and thus can build only >=3.5 wheels
            os: windows-latest
          - os: macos-latest
            architecture: "x86"
        include:
          - python-version: 'pyston'
            os: ubuntu-18.04
            architecture: "x64"

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodule
      run: |
        git submodule init
        git submodule update
    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ matrix.python-version != 'pyston' }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Set up Pyston
      if: ${{ matrix.python-version == 'pyston' }}
      run: |
        wget -O pyston.deb https://github.com/pyston/pyston/releases/download/pyston_2.3.2/pyston_2.3.2_18.04.deb
        sudo apt update
        sudo apt install -y ./pyston.deb
        sudo ln -sf pyston /usr/bin/python
        sudo chown -RH $(whoami) $(python -c 'import os,inspect;print(os.path.dirname(inspect.getfile(inspect)))')
        sudo chown -hRH $(whoami) /usr/bin
        python -m pip install --upgrade pip
    - name: Install pypa-build
      run: |
        python -m pip install --upgrade pip
        python -m pip install build wheel
    - name: Build sdist
      if: ${{ matrix.os == 'macos-latest' && matrix.python-version == '2.7' }}
      run:
        python -m build --sdist
    - name: Build wheel
      run: |
        python -m build --wheel
    - name: Audit wheel
      if: ${{ matrix.python-version == 'pyston' }}
      run: |
        python -m pip install auditwheel
        python -m auditwheel repair --plat linux_x86_64 --wheel-dir dist dist/*.whl
        rm -f dist/*-linux*.whl
        for file in dist/*linux_x86_64.*whl; do mv ${file} ${file//linux_x86_64./}; done
    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: dist
