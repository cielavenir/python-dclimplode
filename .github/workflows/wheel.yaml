name: wheel
  
on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["2.7", "3.5", "3.6", "3.7", "3.8", "3.9", "3.10"]
        os: [macos-latest, windows-latest]
        architecture: ["x64", "x86"]
        exclude:
          - os: macos-latest
            architecture: "x86"
        include:
          - python-version: 'pyston'
            os: ubuntu-18.04
            architecture: "x64"
          - python-version: '3.4'
            os: windows-latest
            architecture: "x86"
          - python-version: '3.4'
            os: windows-latest
            architecture: "x64"

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodule
      run: |
        git submodule init
        git submodule update
    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ matrix.python-version != 'pyston' }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Set up Pyston
      if: ${{ matrix.python-version == 'pyston' }}
      run: |
        wget -O pyston.deb https://github.com/pyston/pyston/releases/download/pyston_2.3.2/pyston_2.3.2_18.04.deb
        sudo apt update
        sudo apt install -y ./pyston.deb
        sudo ln -sf pyston /usr/bin/python
        sudo chown -RH $(whoami) $(python -c 'import os,inspect;print(os.path.dirname(inspect.getfile(inspect)))')
        sudo chown -hRH $(whoami) /usr/bin
        python -m pip install --upgrade pip
    # - name: "Install Visual C++ for Python 2.7"
    #   if: ${{ matrix.os == 'windows-latest' && matrix.python-version == '2.7' }}
    #   run: |
    #     curl -L -O https://github.com/reider-roque/sulley-win-installer/raw/master/VCForPython27.msi
    #     msiexec /i VCForPython27.msi /qn
    #     choco install vcpython27 -f -y
    - name: Upgrade pip
      if: ${{ matrix.python-version != '2.7' && matrix.python-version != '3.4' }}
      run: |
        python -m pip install --upgrade pip
    - name: Upgrade pip (2.7)
      if: ${{ matrix.python-version == '2.7' }}
      run: |
        python -m pip install --upgrade pip~=20.0
        python -m pip install --upgrade setuptools~=44.0
    - name: Upgrade pip (3.4)
      if: ${{ matrix.python-version == '3.4' }}
      run: |
        python -m pip install --upgrade pip~=19.0
        python -m pip install --upgrade setuptools~=43.0
        python -m pip install pybind11
    - name: Install dependencies
      run: |
        python -m pip install build wheel
    - name: Build sdist
      if: ${{ matrix.os == 'macos-latest' && matrix.python-version == '2.7' }}
      run:
        python -m build --sdist
    - name: Build wheel
      if: ${{ matrix.os != 'macos-latest' }}
      run: |
        python -m build --wheel
    - name: Build wheel (macOS x86_64)
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        MACOSX_DEPLOYMENT_TARGET="10.14" _PYTHON_HOST_PLATFORM="macosx-10.14-x86_64" ARCHFLAGS="-arch x86_64" python -m build --wheel
    - name: Build wheel (macOS arm64)
      if: ${{ matrix.os == 'macos-latest' && matrix.python-version != '2.7' && matrix.python-version != '3.4' && matrix.python-version != '3.5' && matrix.python-version != '3.6' && matrix.python-version != '3.7' }}
      run: |
        MACOSX_DEPLOYMENT_TARGET="11.0" _PYTHON_HOST_PLATFORM="macosx-11.0-arm64" ARCHFLAGS="-arch arm64" python -m build --wheel
    - name: Audit wheel
      if: ${{ matrix.python-version == 'pyston' }}
      run: |
        python -m pip install auditwheel
        python -m auditwheel repair --plat linux_x86_64 --wheel-dir dist dist/*.whl
        rm -f dist/*-linux*.whl
        for file in dist/*linux_x86_64.*whl; do mv ${file} ${file//linux_x86_64./}; done
    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheel
        path: dist
